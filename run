#!/bin/bash

# conf file is where everything else is defined.
source conf

# Almost nothing happens here, all the functions are defined elsewhere.
for file in $(ls functions/*.sh)
do
    echo "adding function: $(head -n 1 $file | cut -d " " -f 1)"
    source $file
done

# Setting current location and recreating the work folder.
CWD=$(pwd)
rm -rf $WORK_DIR
mkdir -p $WORK_DIR
cd $WORK_DIR

START=$(date +%s)

# This is where functions are executed.
run ()
{
    echo "[$(date +%T)] running $1 $2" | tee -a $LOG_FILE
    SECONDS=0
    $1
    echo "$1 finished with no errors and ran for $(time_diff $SECONDS)" | tee -a $LOG_FILE
}

host_preprerations ()
{
    # Editing the host prior to do anything else.
    run install_host_packages "$LONG"
    run set_host_repos
    run set_puddle_params
    run update_os
    run host_tweaks
    run fix_host_ssh
    run fix_virt_access
    run fix_host_kvm
    run add_user_stack
    echo -e "Prepared new resources after $(time_diff $(( $(date +%s) - $START)))\n"
}

virt_setup ()
{
    # Re-creating virtual resources.
    run clean_vms
    run clean_pool
    run clean_vnets
    run create_vnet
    run restart_libvirt
    echo -e "Cleaned old resources after $(time_diff $(( $(date +%s) - $START)))\n"
}

create_installation_images ()
{
    # If no installation images are available, create them for the requested version.
    if $CREATE_IMAGES
    then
        run get_ntpd_settings
        run proto_extra_files
        run proto_create
        run proto_prerun
        run proto_firstrun
        run proto_start "$LONG"
        run proto_clean
        run "clean_vms proto"
        run prepare_puddle_images "$LONG"
        run upload_puddle
        echo -e "Created installation images after $(time_diff $(( $(date +%s) - $START)))\n"
    fi
}

create_virtual_environment ()
{
    # Creating the virtual environment as set in conf.
    run get_undercloud_image
    run create_node_images
    run define_nodes
    run "undercloud_firstboot ${NODES[0]}-0"
    echo -e "Creates virtual environment after $(time_diff $(( $(date +%s) - $START)))\n"
}

install_main_undercloud ()
{
    # Installing the main Undercloud machine.
    run "vm_power ${NODES[0]}-0 start" "$LONG"
    run "undercloud_wait ${NODES[0]}-0" "$LONG"
    run "undercloud_ssh_access ${NODES[0]}-0 root $ROOT_PASS"
    run "undercloud_ssh_access ${NODES[0]}-0 stack stack"
    run "undercloud_install ${NODES[0]}-0" "$LONG"
    echo -e "Undercloud installed after $(time_diff $(( $(date +%s) - $START)))\n"
}

predeploy_overcloud ()
{
    # Running steps prior to deploying the Overcloud.
    run "create_json ${NODES[0]}-0"
    run add_templates
    run "overcloud_predeploy ${NODES[0]}-0" "$LONG"
    echo -e "Finished deployment preperations after $(time_diff $(( $(date +%s) - $START)))\n"
}

deploy_overcloud ()
{
    # Running overcloud deploy and waiting for deployment to finish.
    run "overcloud_deploy ${NODES[0]}-0"
    run "overcloud_wait ${NODES[0]}-0" "$LONG"
    echo -e "Overcloud deployed after $(time_diff $(( $(date +%s) - $START)))\n"
}

backup_undercloud ()
{
    # Backup the main Undercloud machine.
    run "backup_undercloud undercloud-0"
    run "vm_power undercloud-0 stop"
    echo -e "Undercloud backed up after $(time_diff $(( $(date +%s) - $START)))\n"
}

restoring_undercloud ()
{
    # Restoring the old Undercloud data onto a new Undercloud machine.
    run "upload_backup ${NODES[0]}-1"
    run "undercloud_firstboot ${NODES[0]}-1"
    run "vm_power ${NODES[0]}-1 start" "$LONG"
    run "undercloud_wait ${NODES[0]}-1" "$LONG"
    run "undercloud_ssh_access ${NODES[0]}-1 root $ROOT_PASS"
    run "undercloud_ssh_access ${NODES[0]}-1 stack stack"
    run "restore_undercloud ${NODES[0]}-1"
    run "undercloud_install ${NODES[0]}-1" "$LONG"
    echo -e "Undercloud restored after $(time_diff $(( $(date +%s) - $START)))\n"
}

host_preprerations
virt_setup
create_installation_images
create_virtual_environment
install_main_undercloud
predeploy_overcloud
deploy_overcloud
# backup_undercloud
# restoring_undercloud

echo "ALL DONE in $(time_diff $(( $(date +%s) - $START)))"
